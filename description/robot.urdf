<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/sergei/robot_ws/install/articubot_one/share/articubot_one/description/robot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robot">
  <!-- Gazebo Fortress (ROS Humble): -->
  <plugin filename="libignition-gazebo-physics-system" name="ignition::gazebo::systems::Physics"/>
  <plugin filename="libignition-gazebo-user-commands-system" name="ignition::gazebo::systems::UserCommands"/>
  <plugin filename="libignition-gazebo-scene-broadcaster-system" name="ignition::gazebo::systems::SceneBroadcaster"/>
  <plugin filename="libignition-gazebo-contact-system" name="ignition::gazebo::systems::Contact"/>
  <plugin filename="libignition-gazebo-imu-system" name="ignition::gazebo::systems::Imu"/>
  <plugin filename="libignition-gazebo-air-pressure-system" name="ignition::gazebo::systems::AirPressure"/>
  <plugin filename="libignition-gazebo-apply-link-wrench-system" name="ignition::gazebo::systems::ApplyLinkWrench"/>
  <plugin filename="libignition-gazebo-navsat-system" name="ignition::gazebo::systems::NavSat"/>
  <plugin filename="libignition-gazebo-sensors-system" name="ignition::gazebo::systems::Sensors">
    <render_engine>ogre2</render_engine>
  </plugin>
  <!-- Gazebo Garden (PX4): -->
  <!-- plugin name="gz::sim::systems::Physics" filename="gz-sim-physics-system"/>
    <plugin name="gz::sim::systems::UserCommands" filename="gz-sim-user-commands-system"/>
    <plugin name="gz::sim::systems::SceneBroadcaster" filename="gz-sim-scene-broadcaster-system"/>
    <plugin name="gz::sim::systems::Contact" filename="gz-sim-contact-system"/>
    <plugin name="gz::sim::systems::Imu" filename="gz-sim-imu-system"/>
    <plugin name="gz::sim::systems::AirPressure" filename="gz-sim-air-pressure-system"/>
    <plugin name="gz::sim::systems::ApplyLinkWrench" filename="gz-sim-apply-link-wrench-system"/>
    <plugin name="gz::sim::systems::NavSat" filename="gz-sim-navsat-system"/>
    <plugin name="gz::sim::systems::Sensors" filename="gz-sim-sensors-system">
      <render_engine>ogre2</render_engine>
    </plugin -->
  <!-- plugin filename="ignition-gazebo-sensors-system" name="gz::sim::systems::Sensors" -->
  <!-- plugin filename="libignition-gazebo-sensors-system.so" name="ignition::gazebo::systems::Sensors">
       <render_engine>ogre</render_engine>
    </plugin -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>
  <material name="blue">
    <color rgba="0 0 1 1"/>
  </material>
  <material name="sensor_blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>
  <material name="sensor_yellow">
    <color rgba="0.8 0.8 0.2 1"/>
  </material>
  <material name="body_color">
    <color rgba="1 0.3 0.1 1"/>
  </material>
  <material name="port_red">
    <color rgba="1 0.2 0.2 1"/>
    <!-- ambient>1.0 0.2 0.2 1</ambient>
        <diffuse>1.0 0.1 0.1 1</diffuse -->
  </material>
  <material name="starboard_green">
    <color rgba="0.2 1 0.2 1"/>
  </material>
  <!-- Specify some standard inertial calculations https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
  <!-- These make use of xacro's mathematical functionality -->
  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot chassis projected on the ground -->
  <link name="base_footprint">
    </link>
  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
    </link>
  <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.192"/>
  </joint>
  <!-- CHASSIS LINK -->
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis_link"/>
    <origin xyz="-0.7 0 -0.01"/>
  </joint>
  <link name="chassis_link">
    <visual name="chassis_visual">
      <origin xyz="0.45 0 0.125"/>
      <geometry>
        <box size="0.9 0.4 0.25"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <visual name="chassis_top_visual">
      <origin xyz="0.675 0 0.375"/>
      <geometry>
        <box size="0.405 0.38 0.25"/>
      </geometry>
      <material name="body_color"/>
    </visual>
    <collision>
      <origin xyz="0.45 0 0.25"/>
      <geometry>
        <box size="0.9 0.4 0.5"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0.45 0 0.25"/>
      <mass value="0.5"/>
      <inertia ixx="0.017083333333333332" ixy="0.0" ixz="0.0" iyy="0.04416666666666667" iyz="0.0" izz="0.04041666666666667"/>
    </inertial>
  </link>
  <!-- *********************** IMU SETUP *********************************  -->
  <!-- Each sensor must be attached to a link.                              -->
  <link name="imu_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0.01"/>
  </joint>
  <!-- LEFT WHEEL LINK -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin rpy="-1.5707963267948966 0 0" xyz="0 0.29 0"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="left_wheel">
    <visual name="left_wheel_visual">
      <geometry>
        <cylinder length="0.09" radius="0.192"/>
      </geometry>
      <material name="port_red"/>
    </visual>
    <visual name="left_wheel_axis_visual">
      <geometry>
        <cylinder length="0.099" radius="0.019200000000000002"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <visual name="left_wheel_marker_visual">
      <origin rpy="0 0 0" xyz="0 0.1344 0"/>
      <geometry>
        <box size="0.038400000000000004 0.0576 0.099"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.192"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.009891" ixy="0.0" ixz="0.0" iyy="0.009891" iyz="0.0" izz="0.018432"/>
    </inertial>
  </link>
  <!-- RIGHT WHEEL LINK -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin rpy="1.5707963267948966 0 0" xyz="0 -0.29 0"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <link name="right_wheel">
    <visual name="right_wheel_visual">
      <geometry>
        <cylinder length="0.09" radius="0.192"/>
      </geometry>
      <material name="starboard_green"/>
    </visual>
    <visual name="right_wheel_axis_visual">
      <geometry>
        <cylinder length="0.099" radius="0.019200000000000002"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <visual name="right_wheel_marker_visual">
      <origin rpy="0 0 0" xyz="0 -0.1344 0"/>
      <geometry>
        <box size="0.038400000000000004 0.0576 0.099"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.192"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.009891" ixy="0.0" ixz="0.0" iyy="0.009891" iyz="0.0" izz="0.018432"/>
    </inertial>
  </link>
  <!-- CASTER WHEELS LINKS -->
  <joint name="left_caster_wheel_joint" type="continuous">
    <parent link="chassis_link"/>
    <child link="left_caster_wheel"/>
    <origin rpy="1.5707963267948966 0 0" xyz="0.1 0.28 -0.062"/>
    <axis xyz="0 0 1"/>
  </joint>
  <link name="left_caster_wheel">
    <visual name="left_caster_visual">
      <geometry>
        <cylinder length="0.08" radius="0.12"/>
      </geometry>
      <material name="port_red"/>
    </visual>
    <visual name="left_caster_marker_visual">
      <geometry>
        <box size="0.06 0.06 0.08800000000000001"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.12"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.3"/>
      <inertia ixx="0.001728" ixy="0.0" ixz="0.0" iyy="0.001728" iyz="0.0" izz="0.001728"/>
    </inertial>
  </link>
  <joint name="right_caster_wheel_joint" type="continuous">
    <parent link="chassis_link"/>
    <child link="right_caster_wheel"/>
    <origin rpy="1.5707963267948966 0 0" xyz="0.1 -0.28 -0.062"/>
    <axis xyz="0 0 -1"/>
  </joint>
  <link name="right_caster_wheel">
    <visual name="right_caster_visual">
      <geometry>
        <cylinder length="0.08" radius="0.12"/>
      </geometry>
      <material name="starboard_green"/>
    </visual>
    <visual name="right_caster_marker_visual">
      <geometry>
        <box size="0.06 0.06 0.08800000000000001"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.12"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.3"/>
      <inertia ixx="0.001728" ixy="0.0" ixz="0.0" iyy="0.001728" iyz="0.0" izz="0.001728"/>
    </inertial>
  </link>
  <!-- gazebo reference="right_caster_wheel">
        <material>
            <ambient>1.0 0.2 0.2 1</ambient>
            <diffuse>1.0 0.1 0.1 1</diffuse>
        </material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo -->
  <ros2_control name="DraggerRobot" type="system">
    <hardware>
      <plugin>ign_ros2_control/IgnitionSystem</plugin>
      <!-- plugin>gz_ros2_control/GazeboSimSystem</plugin -->
    </hardware>
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity">
        <param name="initial_value">0.0</param>
      </state_interface>
      <state_interface name="position">
        <param name="initial_value">0.0</param>
      </state_interface>
    </joint>
  </ros2_control>
  <gazebo>
    <!-- library: /opt/ros/humble/lib/libign_ros2_control-system.so - GZ Fortress on ROS Humble -->
    <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
      <!-- plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin" -->
      <!-- the following are just default parameters anyway. Skip them unless you want to reassign them:
            <robot_param>robot_description</robot_param>
            <robot_param_node>robot_state_publisher</robot_param_node> -->
      <parameters>/home/sergei/robot_ws/install/articubot_one/share/articubot_one/config/gaz_ros2_ctl_use_sim.yaml</parameters>
      <parameters>/home/sergei/robot_ws/install/articubot_one/share/articubot_one/config/my_controllers.yaml</parameters>
    </plugin>
  </gazebo>
  <joint name="laser_joint" type="fixed">
    <parent link="base_link"/>
    <child link="laser_link"/>
    <origin rpy="0 0 3.1459" xyz="-0.01 0 0.57"/>
  </joint>
  <link name="laser_link">
    <visual>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
    <visual>
      <origin xyz="0 0 -0.05"/>
      <geometry>
        <cylinder length="0.1" radius="0.01"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="7.583333333333335e-05" ixy="0.0" ixz="0.0" iyy="7.583333333333335e-05" iyz="0.0" izz="0.00012500000000000003"/>
    </inertial>
  </link>
  <gazebo reference="laser_link">
    <sensor name="laser" type="ray">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <min_angle>-3.14</min_angle>
            <max_angle>3.14</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.3</min>
          <max>12</max>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="laser_controller">
        <ros>
          <argument>~/out:=scan</argument>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>laser_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin rpy="0 0.18 0" xyz="0.2 0 0.55"/>
  </joint>
  <link name="camera_link">
    <visual>
      <geometry>
        <box size="0.010 0.03 0.03"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
    <visual>
      <origin xyz="0 0 -0.05"/>
      <geometry>
        <cylinder length="0.1" radius="0.002"/>
      </geometry>
      <material name="sensor_blue"/>
    </visual>
  </link>
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
  </joint>
  <link name="camera_link_optical">
    <!-- sensor name="camera" type="camera">
            <camera>
                <horizontal_fov>1.047</horizontal_fov>
                <image>
                    <width>320</width>
                    <height>240</height>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
            </camera>
            <always_on>1</always_on>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
            <topic>camera</topic>
        </sensor -->
  </link>
  <gazebo reference="camera_link">
    <sensor name="camera" type="camera">
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <frame_name>camera_link_optical</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
    <origin rpy="0 0 3.1459" xyz="-0.1 0 0.65"/>
  </joint>
  <link name="gps_link">
    <visual>
      <geometry>
        <cylinder length="0.02" radius="0.05"/>
      </geometry>
      <material name="sensor_yellow"/>
    </visual>
    <visual>
      <origin xyz="0 0 -0.1"/>
      <geometry>
        <cylinder length="0.2" radius="0.01"/>
      </geometry>
      <material name="sensor_yellow"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.04" radius="0.05"/>
      </geometry>
    </collision>
  </link>
  <!-- See https://medium.com/@bytesrobotics/a-review-of-the-ros2-urdf-gazebo-sensor-91e947c633d7 -->
  <gazebo reference="gps_link">
    <sensor name="gps_sensor" type="gps">
      <always_on>true</always_on>
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>false</visualize>
      <update_rate>5</update_rate>
      <plugin filename="libgazebo_ros_gps_sensor.so" name="gps_controller">
        <ros>
          <!-- <namespace>/br</namespace> -->
          <remapping>gps_controller/out:=gps</remapping>
        </ros>
        <frame_name>gps_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- xacro:include filename="face.xacro" / -->
</robot>
