<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:include filename="inertial_macros.xacro"/>

	<!-- Values corrected for Dragger robot -->
    <xacro:property name="chassis_length" value="0.90"/>
    <xacro:property name="chassis_width" value="0.40"/>
    <xacro:property name="chassis_height" value="0.50"/>
    <xacro:property name="chassis_mass" value="30.0"/>
    <xacro:property name="wheel_radius" value="0.192"/>
    <xacro:property name="wheel_thickness" value="0.09"/>
    <xacro:property name="wheel_mass" value="1.0"/>
    <xacro:property name="wheel_offset_x" value="${chassis_length/2 - wheel_radius - 0.01}"/>
    <xacro:property name="wheel_offset_y" value="0.290"/>
    <xacro:property name="wheel_offset_z" value="0.01"/>
    <xacro:property name="caster_wheel_radius" value="0.12"/>
    <xacro:property name="caster_wheel_thickness" value="0.05"/>
    <xacro:property name="caster_wheel_mass" value="0.3"/>
    <xacro:property name="caster_wheel_offset_x" value="${-chassis_length/2 + caster_wheel_radius + 0.01}"/>
    <xacro:property name="caster_wheel_offset_y" value="0.280"/>
    <xacro:property name="caster_wheel_offset_z" value="${wheel_offset_z - wheel_radius + caster_wheel_radius}"/>

    <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
    <!-- Define the center of the main robot chassis projected on the ground -->   
    <!-- link name="base_footprint"/ -->
    <link name="base_footprint">
        <visual name="footprint_visual">
            <origin xyz="0 0 0.01"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} 0.02"/>
            </geometry>
            <material name="shadow_grey"/>
        </visual>
     </link>

    <!-- The base footprint of the robot is located underneath the chassis -->
    <joint name="base_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link" />
        <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
    </joint>
    
    <!-- ********************** ROBOT BASE *********************************  -->
    <!-- link name="base_link"/ -->
    
    <!-- CHASSIS LINK -->

    <!-- joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis_link"/>
        <origin xyz="${-wheel_offset_x} 0 ${-wheel_offset_z}"/>
    </joint -->

    <link name="base_link">
        <visual name="chassis_visual">
            <!-- origin xyz="${chassis_length/2} 0 ${chassis_height/4}"/ -->
            <origin xyz="0 0 ${chassis_height/4}"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height/2}"/>
            </geometry>
            <material name="body_color"/>
        </visual>
        <visual name="chassis_top_visual">
            <origin xyz="${chassis_length*1/4} 0 ${chassis_height*3/4}"/>
            <geometry>
                <box size="${chassis_length*0.45} ${chassis_width*0.95} ${chassis_height/2}"/>
            </geometry>
            <material name="body_color"/>
        </visual>
        <collision>
            <origin xyz="0 0 ${chassis_height/2}" rpy="0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="0 0 ${chassis_height/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <!-- *********************** IMU SETUP *********************************  -->
    <!-- Each sensor must be attached to a link.                              -->

    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.1 0.1 0.1"/>
            </geometry>
            <material name="sensor_blue"/>
        </visual>
        <collision>
            <geometry>
                <box size="0.1 0.1 0.1"/>
            </geometry>
        </collision>
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="0 0 0.04"/>
    </joint>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
        <always_on>1</always_on>
        <topic>imu</topic>
        <update_rate>250</update_rate>
            <imu>
                <enable_orientation>0</enable_orientation>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.009</stddev>
                            <bias_mean>0.00075</bias_mean>
                            <bias_stddev>0.005</bias_stddev>
                            <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
                            <precision>0.00025</precision>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.009</stddev>
                            <bias_mean>0.00075</bias_mean>
                            <bias_stddev>0.005</bias_stddev>
                            <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
                            <precision>0.00025</precision>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.009</stddev>
                            <bias_mean>0.00075</bias_mean>
                            <bias_stddev>0.005</bias_stddev>
                            <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
                            <precision>0.00025</precision>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.021</stddev>
                            <bias_mean>0.05</bias_mean>
                            <bias_stddev>0.0075</bias_stddev>
                            <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
                            <precision>0.005</precision>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.021</stddev>
                            <bias_mean>0.05</bias_mean>
                            <bias_stddev>0.0075</bias_stddev>
                            <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
                            <precision>0.005</precision>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.021</stddev>
                            <bias_mean>0.05</bias_mean>
                            <bias_stddev>0.0075</bias_stddev>
                            <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
                            <precision>0.005</precision>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>

    <!-- LEFT WHEEL LINK -->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="${wheel_offset_x} ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1">
          <limit>
            <lower>-1.79769e+308</lower>
            <upper>1.79769e+308</upper>
          </limit>
        </axis>
    </joint>

    <link name="left_wheel">
        <visual name="left_wheel_visual">
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="port_red"/>
        </visual>
        <visual name="left_wheel_axis_visual">
            <geometry>
                <cylinder radius="${wheel_radius*0.1}" length="${wheel_thickness*1.1}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <visual name="left_wheel_marker_visual">
            <origin xyz="0 ${wheel_radius*0.7} 0" rpy="0 0 0" />
            <geometry>
                <box size="${wheel_radius*0.2} ${wheel_radius*0.3} ${wheel_thickness*1.1}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <max_contacts>1</max_contacts>
            <surface>
                <friction>
                    <ode>
                    <mu>0.4</mu>
                    <mu2>0.6</mu2>
                    </ode>
                </friction>
                <bounce/>
                <contact>
                    <ode>
                    <min_depth>0.005</min_depth>
                    <kp>1e8</kp>
                    </ode>
                </contact>
            </surface>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="${wheel_offset_x} ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1">
          <limit>
            <lower>-1.79769e+308</lower>
            <upper>1.79769e+308</upper>
          </limit>
        </axis>
    </joint>

    <link name="right_wheel">
        <visual name="right_wheel_visual">
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="starboard_green"/>
        </visual>
        <visual name="right_wheel_axis_visual">
            <geometry>
                <cylinder radius="${wheel_radius*0.1}" length="${wheel_thickness*1.1}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <visual name="right_wheel_marker_visual">
            <origin xyz="0 ${-wheel_radius*0.7} 0" rpy="0 0 0" />
            <geometry>
                <box size="${wheel_radius*0.2} ${wheel_radius*0.3} ${wheel_thickness*1.1}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <max_contacts>1</max_contacts>
            <surface>
                <friction>
                    <ode>
                    <mu>0.4</mu>
                    <mu2>0.6</mu2>
                    </ode>
                </friction>
                <bounce/>
                <contact>
                    <ode>
                    <min_depth>0.005</min_depth>
                    <kp>1e8</kp>
                    </ode>
                </contact>
            </surface>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- CASTER WHEELS LINKS -->

    <joint name="left_caster_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_caster_wheel"/>
        <origin xyz="${caster_wheel_offset_x} ${caster_wheel_offset_y} ${caster_wheel_offset_z}" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>


    <link name="left_caster_wheel">
        <visual name="left_caster_visual">
            <geometry>
               <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_thickness}"/>
            </geometry>
            <material name="port_red"/>
        </visual>
        <visual name="left_caster_marker_visual">
            <geometry>
                <box size="${caster_wheel_radius*0.5} ${caster_wheel_radius*0.5} ${caster_wheel_thickness*1.1}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_thickness}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                    <mu>0</mu>
                    <mu2>0</mu2>
                    <slip1>1.0</slip1>
                    <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

    <joint name="right_caster_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_caster_wheel"/>
        <origin xyz="${caster_wheel_offset_x} ${-caster_wheel_offset_y} ${caster_wheel_offset_z}" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>


    <link name="right_caster_wheel">
        <visual name="right_caster_visual">
            <geometry>
               <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_thickness}"/>
            </geometry>
            <material name="starboard_green"/>
        </visual>
        <visual name="right_caster_marker_visual">
            <geometry>
                <box size="${caster_wheel_radius*0.5} ${caster_wheel_radius*0.5} ${caster_wheel_thickness*1.1}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_thickness}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                    <mu>0</mu>
                    <mu2>0</mu2>
                    <slip1>1.0</slip1>
                    <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_sphere>
    </link>

</robot>