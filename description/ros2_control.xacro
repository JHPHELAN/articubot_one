<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:unless value="$(arg sim_mode)">
        <ros2_control name="RealRobot" type="system">
            <hardware>
				<!-- Values corrected for Dragger robot -->
                <plugin>diffdrive_arduino/DiffDriveArduino</plugin>
                <param name="left_wheel_name">left_wheel_joint</param>
                <param name="right_wheel_name">right_wheel_joint</param>
                <param name="loop_rate">30</param>
                <param name="device">/dev/ttyACM0</param>
                <param name="baud_rate">115200</param>
                <param name="timeout">1000</param>
                <param name="enc_counts_per_rev">13730</param>
            </hardware>
            <joint name="left_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity">
                    <param name="initial_value">0.0</param>
                </state_interface>
                <state_interface name="position">
                    <param name="initial_value">0.0</param>
                </state_interface>
            </joint>
            <joint name="right_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity">
                    <param name="initial_value">0.0</param>
                </state_interface>
                <state_interface name="position">
                    <param name="initial_value">0.0</param>
                </state_interface>
            </joint>
        </ros2_control>
    </xacro:unless>

    <xacro:if value="$(arg sim_mode)">


        <ros2_control name="RobotSystem" type="system">
            <hardware>
                <plugin>ign_ros2_control/IgnitionSystem</plugin>
                <!-- plugin>gz_ros2_control/GazeboSimSystem</plugin -->
            </hardware>
            <!-- hardware>
                <plugin>mock_components/GenericSystem</plugin>
                <param name="calculate_dynamics">true</param>
            </hardware -->
            <joint name="left_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity">
                    <param name="initial_value">0.0</param>
                </state_interface>
                <state_interface name="position">
                    <param name="initial_value">0.0</param>
                </state_interface>
            </joint>
            <joint name="right_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity">
                    <param name="initial_value">0.0</param>
                </state_interface>
                <state_interface name="position">
                    <param name="initial_value">0.0</param>
                </state_interface>
            </joint>
        </ros2_control>


        <!-- ros2_control name="GazeboSystem" type="system">
            <hardware -->
               <!-- plugin>mock_components/GenericSystem</plugin -->
               <!-- plugin>fake_robot/FakeRobot</plugin -->
               <!-- plugin>diffdrive_arduino/DiffDriveArduino</plugin -->
        <!--    <plugin>gazebo_ros2_control/GazeboSystem</plugin>
            </hardware>
            <joint name="left_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity">
                    <param name="initial_value">0.0</param>
                </state_interface>
                <state_interface name="position">
                    <param name="initial_value">0.0</param>
                </state_interface>
            </joint>
            <joint name="right_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity">
                    <param name="initial_value">0.0</param>
                </state_interface>
                <state_interface name="position">
                    <param name="initial_value">0.0</param>
                </state_interface>
            </joint>
        </ros2_control -->
    </xacro:if>

    <gazebo>
        <!-- library: /opt/ros/humble/lib/libign_ros2_control-system.so -->
        <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <!-- plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin" -->
            <robot_param>robot_description</robot_param>
            <robot_param_node>robot_state_publisher</robot_param_node>
            <parameters>$(find articubot_one)/config/gaz_ros2_ctl_use_sim.yaml</parameters>
            <parameters>$(find articubot_one)/config/my_controllers.yaml</parameters>
        </plugin>
    </gazebo>

    <!-- gazebo>
        <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
            <parameters>$(find articubot_one)/config/my_controllers.yaml</parameters>
            <parameters>$(find articubot_one)/config/gaz_ros2_ctl_use_sim.yaml</parameters>
        </plugin>
    </gazebo -->

</robot>
