<?xml version="1.0" encoding="UTF-8"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="PI" value="3.1415926535897931"/>

  <xacro:macro name="create_wheel" params="prefix y_offset wheel_radius wheel_width">
    <link name="${prefix}_wheel_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 ${PI/2} ${PI/2}"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 ${PI/2} ${PI/2}"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      <xacro:inertial_cylinder mass="0.01" length="${wheel_width}" radius="${wheel_radius}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:inertial_cylinder>
    </link>

    <!-- joint name="${prefix}_wheel_joint" type="fixed" -->
    <joint name="${prefix}_wheel_joint" type="continuous">
      <origin xyz="0 ${y_offset} ${-wheel_radius}" rpy="0 0 0"/>
      <parent link="chassis_link"/>
      <child link="${prefix}_wheel_link"/>
      <axis xyz="0 1 0"/>
    </joint>

  </xacro:macro>

  <xacro:macro name="create_base" 
               params="diffdrive_update_rate:=40 wheel_separation wheel_radius:=0.033 wheel_width:=0.024 wheel_torque:=1.0 wheel_accel:=1.8 mass_kg:=3.5 base_diameter *mesh">

    <!-- replaced with ros2_control.xacro -->
    <!-- xacro:include filename="$(find articubot_one)/robots/turtle/description/create_base_gazebo.urdf.xacro"/ -->

    <!-- The coordinate frame called base_link is rigidly attached to the robot root body. -->
    <link name="base_link">
      <visual name="baselink_visual">
          <origin xyz="0 0 0"/>
          <geometry>
              <sphere radius="0.01"/>
          </geometry>
          <material name="red"/>
      </visual>
    </link>

    <!-- Define the center of the main robot chassis projected on the ground -->   
    <link name="base_footprint">
      <visual name="footprint_visual">
          <origin xyz="0 0 0"/>
          <geometry>
              <cylinder radius="${base_diameter/2 + 0.01}" length="0.003"/>
          </geometry>
          <material name="shadow_grey"/>
      </visual>
    </link>

    <!-- The base footprint of the robot is located underneath the chassis -->
    <joint name="base_footprint_joint" type="fixed">
      <parent link="base_link"/>
      <child link="base_footprint" />
      <origin xyz="0 0 -${wheel_radius}" rpy="0 0 0"/>
    </joint>

    <joint name="chassis_joint" type="fixed">
      <parent link="base_link"/>
      <child link="chassis_link"/>
      <origin xyz="0 0 ${wheel_radius}"/>
    </joint>

    <!-- CHASSIS LINK -->
    <link name="chassis_link">

      <visual name="chassis_gz_visual">
        <origin xyz=" 0 0 -0.015" rpy="0 0 0"/>
        <geometry>
            <mesh filename="model://meshes/create_1.dae"/>
        </geometry>
      </visual>
      <visual name="chassis_rviz_visual">
        <origin xyz=" 0 0 -0.015" rpy="0 0 0"/>
        <geometry>
          <xacro:insert_block name="mesh"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0.0 0.0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder length="0.0611632" radius="${base_diameter/2}"/>
        </geometry>
      </collision>
      <xacro:inertial_cylinder mass="${mass_kg}" length="0.0611632" radius="${base_diameter/2}">
        <!-- cheat: origin moved forward a bit, so that center mass is forward of the wheels axis -->  
        <origin xyz="0.03 0 0" rpy="0 0 0"/>
      </xacro:inertial_cylinder>
    </link>

    <link name="wall_sensor_link">
    </link>

    <link name="left_cliff_sensor_link">
    </link>

    <link name="right_cliff_sensor_link">
    </link>

    <link name="leftfront_cliff_sensor_link">
    </link>

    <link name="rightfront_cliff_sensor_link">
    </link>

    <joint name="base_wall_sensor_joint" type="fixed">
      <origin xyz="0.09 -0.120 0.042" rpy="0 0 -1.0"/>
      <parent link="chassis_link"/>
      <child link="wall_sensor_link"/>
    </joint>
    <joint name="base_left_cliff_sensor_joint" type="fixed">
      <origin xyz="0.07 0.14 0.01" rpy="0 ${PI/2} 0"/>
      <parent link="chassis_link"/>
      <child link="left_cliff_sensor_link"/>
    </joint>
    <joint name="base_right_cliff_sensor_joint" type="fixed">
      <origin xyz="0.07 -0.14 0.01" rpy="0 ${PI/2} 0"/>
      <parent link="chassis_link"/>
      <child link="right_cliff_sensor_link"/>
    </joint>
    <joint name="base_leftfront_cliff_sensor_joint" type="fixed">
      <origin xyz="0.15 0.04 0.01" rpy="0 ${PI/2} 0"/>
      <parent link="chassis_link"/>
      <child link="leftfront_cliff_sensor_link"/>
    </joint>
    <joint name="base_rightfront_cliff_sensor_joint" type="fixed">
      <origin xyz="0.15 -0.04 0.01" rpy="0 ${PI/2} 0"/>
      <parent link="chassis_link"/>
      <child link="rightfront_cliff_sensor_link"/>
    </joint>

    <xacro:create_wheel prefix="left" y_offset="${wheel_separation / 2}" wheel_radius="${wheel_radius}" wheel_width="${wheel_width}"/>
    <xacro:create_wheel prefix="right" y_offset="${wheel_separation / -2}" wheel_radius="${wheel_radius}" wheel_width="${wheel_width}"/>

    <link name="front_castor_link">
      <visual>
        <origin xyz="0 0 0" rpy="0 ${PI/2} ${PI/2}"/>
        <geometry>
          <sphere radius="0.018"/>
        </geometry>
        <material name="grey"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 ${PI/2} ${PI/2}"/>
        <geometry>
          <sphere radius="0.018"/>
        </geometry>
      </collision>
      <xacro:inertial_sphere mass="0.01" radius="0.018">
        <origin xyz="0 0 0" rpy="0 0 0"/>
      </xacro:inertial_sphere>
    </link>

    <!-- fixed because there's no transmission -->
    <joint name="front_castor_joint" type="fixed">
      <origin xyz="0.13 0 -0.048" rpy="0 0 0"/>
      <parent link="chassis_link"/>
      <child link="front_castor_link"/>
      <axis xyz="0 1 0"/>
    </joint>

    <joint name="imu_joint" type="fixed">
      <parent link="chassis_link"/>
      <child link="imu_link"/>
      <origin xyz="0.0 0 0.068" rpy="0 0 0"/>
    </joint>

    <link name="imu_link"/>

    <!-- gz model -m turtle -s imu_link -->
    <gazebo reference="imu_link">
        <sensor name="imu_link" type="imu">
        <always_on>1</always_on>
        <topic>gz_imu/data</topic>
        <!-- future Gazebo versions might require "<frame_id>" here. Must reference an actual link in .xacro -->
        <gz_frame_id>imu_link</gz_frame_id>
        <frame_id>imu_link</frame_id>
        <update_rate>250</update_rate>
            <imu>
                <orientation_reference_frame>
                  <localization>ENU</localization>
                  <!-- custom_rpy parent_frame='world'>1.570795 0 0</custom_rpy -->
                </orientation_reference_frame>
                <enable_orientation>1</enable_orientation>
                <angular_velocity>
                    <x>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.009</stddev>
                            <bias_mean>0.00075</bias_mean>
                            <bias_stddev>0.005</bias_stddev>
                            <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
                            <precision>0.00025</precision>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.009</stddev>
                            <bias_mean>0.00075</bias_mean>
                            <bias_stddev>0.005</bias_stddev>
                            <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
                            <precision>0.00025</precision>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.009</stddev>
                            <bias_mean>0.00075</bias_mean>
                            <bias_stddev>0.005</bias_stddev>
                            <dynamic_bias_stddev>0.00002</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>400.0</dynamic_bias_correlation_time>
                            <precision>0.00025</precision>
                        </noise>
                    </z>
                </angular_velocity>
                <linear_acceleration>
                    <x>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.021</stddev>
                            <bias_mean>0.05</bias_mean>
                            <bias_stddev>0.0075</bias_stddev>
                            <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
                            <precision>0.005</precision>
                        </noise>
                    </x>
                    <y>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.021</stddev>
                            <bias_mean>0.05</bias_mean>
                            <bias_stddev>0.0075</bias_stddev>
                            <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
                            <precision>0.005</precision>
                        </noise>
                    </y>
                    <z>
                        <noise type="gaussian">
                            <mean>0</mean>
                            <stddev>0.021</stddev>
                            <bias_mean>0.05</bias_mean>
                            <bias_stddev>0.0075</bias_stddev>
                            <dynamic_bias_stddev>0.000375</dynamic_bias_stddev>
                            <dynamic_bias_correlation_time>175.0</dynamic_bias_correlation_time>
                            <precision>0.005</precision>
                        </noise>
                    </z>
                </linear_acceleration>
            </imu>
        </sensor>
    </gazebo>

    <joint name="scan_joint" type="fixed">
      <parent link="chassis_link"/>
      <child link="laser_frame"/>
      <origin xyz="0.085 0 0.033" rpy="0 0 0"/>
    </joint>

    <link name="laser_frame">
      <visual>
        <geometry>
          <cylinder radius="0.0375" length="0.025"/>
        </geometry>
        <material name="sensor_blue"/>
      </visual>
      <visual>
        <origin xyz="0 0 -0.01"/>
        <geometry>
          <cylinder radius="0.01" length="0.02"/>
        </geometry>
        <material name="sensor_blue"/>
      </visual>
    </link>

    <!-- gz model -m turtle -s laser_frame -->
    <gazebo reference="laser_frame">
        <!-- name must be "laser_frame", specifically for lasers. Must reference an actual link in .xacro -->
        <sensor name='laser_frame' type='gpu_lidar'>
          <pose>0 0 0 0 0 0</pose>
          <always_on>1</always_on>
          <!-- 6 Hz for LD14 - see "frequency" in dual_ekf_navsat_parameters.yaml -->
          <update_rate>6</update_rate>
          <topic>gz_scan</topic>
          <!-- future Gazebo versions might require "<frame_id>" here. Must reference an actual link in .xacro -->
          <gz_frame_id>laser_frame</gz_frame_id>
          <frame_id>laser_frame</frame_id>
          <ray>
            <scan>
              <horizontal>
                <samples>360</samples>
                <resolution>1</resolution>
                <min_angle>-${pi}</min_angle>
                <max_angle>${pi}</max_angle>
              </horizontal>
              <vertical>
                <samples>1</samples>
                <resolution>1</resolution>
                <min_angle>0.0</min_angle>
                <max_angle>0.0</max_angle>
              </vertical>
            </scan>
            <range>
              <min>0.3</min>
              <max>12.0</max>
              <resolution>0.01</resolution>
            </range>
            <noise>
              <type>gaussian</type>
              <mean>0</mean>
              <stddev>0.01</stddev>
            </noise>
          </ray>
          <visualize>true</visualize>
        </sensor>
    </gazebo>

  </xacro:macro>

</robot>
