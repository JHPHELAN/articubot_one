<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

    <xacro:include filename="../../../description/inertial_macros.xacro"/>

	<!-- Values corrected for stingray robot -->
    <xacro:property name="chassis_length" value="0.266"/>
    <xacro:property name="chassis_width" value="0.228"/>
    <xacro:property name="chassis_height" value="0.081"/>
    <xacro:property name="chassis_mass" value="0.98"/>
    <xacro:property name="chassis_offset" value="0.0455"/>
    <xacro:property name="front_panel_offset" value="0.090"/>

    <xacro:property name="wheel_radius" value="0.0615"/>
    <xacro:property name="wheel_thickness" value="0.02"/>
    <xacro:property name="wheel_mass" value="0.058"/>
    <xacro:property name="wheel_offset_x" value="0.13"/>
    <xacro:property name="wheel_separation" value="0.26"/>

    <xacro:property name="caster_radius" value="0.028"/>
    <xacro:property name="caster_x_offset" value="-0.207"/>
    <xacro:property name="caster_z_offset" value="-0.035"/>
    <xacro:property name="caster_mass" value="0.022"/>

    <!-- we need the following because (unlike sim) real Dragger doesn't have a controller reporting caster's position -->
    <xacro:if value="$(arg sim_mode)">
        <xacro:property name="caster_joint_type" value="continuous"/>
    </xacro:if>
    <xacro:unless value="$(arg sim_mode)">
        <xacro:property name="caster_joint_type" value="fixed"/>
    </xacro:unless>

    <!-- ********************** ROBOT BASE *********************************  -->
    <!-- The coordinate frame called base_link is rigidly attached to the robot root body.
         It is recommended to choose the robot waist as its root body.
         The base_link can be attached to the root in any arbitrary position or orientation;
         for every hardware platform there will be a different place on the base that provides an obvious point of reference.
         Note that REP 103 [1] specifies a preferred orientation for frames.
         See https://www.ros.org/reps/rep-0120.html#base-link -->

    <link name="base_link">
        <visual name="baselink_visual">
            <origin xyz="0 0 0"/>
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
            <material name="red"/>
        </visual>
    </link>
    
    <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
    <!-- The base_footprint is the representation of the robot position on the floor. 
         The floor is usually the level where the supporting leg rests, i.e. z = min(l_sole_z, r_sole_z) where l_sole_z and r_sole_z are the left and right sole height respecitvely.
         The translation component of the frame should be the barycenter of the feet projections on the floor.
         With respect to the odom frame, the roll and pitch angles should be zero and the yaw angle should correspond to the base_link yaw angle.
         Rationale: base_footprint provides a fairly stable 2D planar representation of the humanoid even while walking and swaying with the base_link. -->

    <!-- Define the center of the main robot chassis projected on the ground -->   
    <link name="base_footprint">
        <visual name="footprint_visual">
            <origin xyz="-${chassis_offset + caster_radius} 0.0 0.0"/>
            <geometry>
                <box size="${chassis_length + (caster_radius * 2)} ${wheel_separation + wheel_thickness} 0.001"/>
            </geometry>
            <material name="gray"/>
        </visual>
     </link>

    <!-- The base footprint of the robot is located underneath the chassis -->
    <joint name="base_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint" />
        <origin xyz="0 0 -${wheel_radius}" rpy="0 0 0"/>
    </joint>
    
    <!-- ********************** ROBOT BODY *********************************  -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis_link"/>
        <origin xyz="0.0 0.0 0.0"/>
    </joint>

    <!-- CHASSIS LINK -->
    <link name="chassis_link">
        <visual name="chassis_gz_visual">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <mesh filename="model://meshes/Stingray.stl" scale="0.001 0.001 0.001"/>
            </geometry>
            <material name="acrylic"/>
        </visual>
        <visual name="chassis_rviz_visual">
             <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <!-- box size="${chassis_length} ${chassis_width} ${chassis_height}"/ -->
                <mesh filename="package://articubot_one/assets/meshes/Stingray.stl" scale="0.001 0.001 0.001"/>
            </geometry>
            <material name="acrylic"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
		        <!-- collision doesn't need to be a mesh, a box is sufficient -->
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="${chassis_mass}" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        </xacro:inertial_box>
    </link>

    <!-- LEFT WHEEL JOINT -->
    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_link"/>
        <origin xyz="0.0 ${wheel_offset_x} 0.0" rpy="-${pi/2} 0.0 0.0"/>
        <axis xyz="0 0 1"/>
    </joint>

    <!-- LEFT WHEEL LINK -->
    <link name="left_wheel_link">
        <visual name="left_wheel_visual">
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <visual name="left_wheel_marker_visual">
            <origin xyz="0 ${wheel_radius*0.7} 0" rpy="0 0 0" />
            <geometry>
                <box size="${wheel_radius*0.2} ${wheel_radius*0.3} ${wheel_thickness*1.1}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.141" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- RIGHT WHEEL JOINT -->
    <joint name="right_wheel_joint" type="continuous">
        <parent link="chassis_link"/>
        <child link="right_wheel_link"/>
        <origin xyz="0.0 ${-wheel_offset_x} 0.0" rpy="${pi/2} 0 0"/>
        <axis xyz="0 0 -1"/>
    </joint>

    <!-- RIGHT WHEEL LINK -->
    <link name="right_wheel_link">
        <visual name="right_wheel_visual">
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>        
        <visual name="right_wheel_marker_visual">
            <origin xyz="0 ${wheel_radius*0.7} 0" rpy="0 0 0" />
            <geometry>
                <box size="${wheel_radius*0.2} ${wheel_radius*0.3} ${wheel_thickness*1.1}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.141" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        </xacro:inertial_cylinder>
    </link>

    <!-- CASTER WHEEL center JHP -->
    <!-- CASTER WHEEL JOINT-->
    <joint name="caster_wheel_joint" type="fixed">
        <origin xyz="${caster_x_offset} 0.0 ${caster_z_offset}" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="caster_wheel_link"/>
        <axis xyz="0.0 0.0 0.0"/>
        <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0"/>
    </joint>
    <!-- CASTER WHEEL LINK -->
    <link name="caster_wheel_link">
        <visual name="">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <material name="white"/>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <sphere radius="${caster_radius}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                    <mu>0</mu>
                    <mu2>0</mu2>
                    <slip1>1.0</slip1>
                    <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <xacro:inertial_sphere mass="${caster_mass}" radius="${caster_radius}">
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        </xacro:inertial_sphere>
    </link>


</robot>
